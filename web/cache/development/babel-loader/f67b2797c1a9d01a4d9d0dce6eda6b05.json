{"ast":null,"code":"var _jsxFileName = \"C:\\\\Program Files\\\\nodejs\\\\week4\\\\navigation\\\\MainTabNavigator.js\";\nimport React from \"react\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport TabBarIcon from \"../components/TabBarIcon\";\nimport CompleteScreen from \"../screens/CompleteScreen\";\nimport AllScreen from \"../screens/AllScreen\";\nimport ActiveScreen from \"../screens/ActiveScreen\";\nimport SingleTodoScreen from \"../screens/SingleToDoScreen\";\nimport { Ionicons } from \"@expo/vector-icons\";\nvar Stack = createStackNavigator();\nvar Tab = createBottomTabNavigator();\n\nfunction AllStackScreen() {\n  return React.createElement(Stack.Navigator, {\n    initialRoute: \"AllScreen\",\n    screenOptions: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"AllScreen\",\n    component: AllScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"SingleToDoScreen\",\n    component: SingleTodoScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default function MainTabNavigator() {\n  var _this = this;\n\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, React.createElement(Tab.Navigator, {\n    screenOptions: function screenOptions(_ref) {\n      var route = _ref.route;\n      return {\n        tabBarIcon: function tabBarIcon(_ref2) {\n          var focused = _ref2.focused,\n              color = _ref2.color,\n              size = _ref2.size;\n          var iconName;\n\n          if (route.name === \"All\") {\n            iconName = focused ? \"ios-add-circle-outline\" : \"ios-add-circle-outline\";\n          } else if (route.name === \"Active\") {\n            iconName = focused ? \"ios-navigate\" : \"ios-navigate\";\n          } else if (route.name === \"Complete\") {\n            iconName = focused ? \"ios-done-all\" : \"ios-done-all\";\n          }\n\n          return React.createElement(Ionicons, {\n            name: iconName,\n            size: size,\n            color: color,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 20\n            }\n          });\n        }\n      };\n    },\n    tabBarOptions: {\n      activeTintColor: \"#358c63\",\n      inactiveTintColor: \"gray\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"AllScreen\",\n    component: AllStackScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"CompleteScreen\",\n    component: CompleteScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"ActiveScreen\",\n    component: ActiveScreen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["C:/Program Files/nodejs/week4/navigation/MainTabNavigator.js"],"names":["React","NavigationContainer","createStackNavigator","createBottomTabNavigator","TabBarIcon","CompleteScreen","AllScreen","ActiveScreen","SingleTodoScreen","Ionicons","Stack","Tab","AllStackScreen","headerShown","MainTabNavigator","route","tabBarIcon","focused","color","size","iconName","name","activeTintColor","inactiveTintColor"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Platform } from \"react-native\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\r\nimport TabBarIcon from \"../components/TabBarIcon\";\r\nimport CompleteScreen from \"../screens/CompleteScreen\";\r\nimport AllScreen from \"../screens/AllScreen\";\r\nimport ActiveScreen from \"../screens/ActiveScreen\";\r\nimport SingleTodoScreen from \"../screens/SingleToDoScreen\";\r\nimport { Ionicons } from \"@expo/vector-icons\";\r\n\r\nconst Stack = createStackNavigator();\r\nconst Tab = createBottomTabNavigator();\r\n\r\nfunction AllStackScreen() {\r\n  return (\r\n    <Stack.Navigator\r\n      initialRoute=\"AllScreen\"\r\n      screenOptions={{\r\n        headerShown: false,\r\n      }}\r\n    >\r\n      <Stack.Screen name=\"AllScreen\" component={AllScreen} />\r\n      <Stack.Screen name=\"SingleToDoScreen\" component={SingleTodoScreen} />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\nexport default function MainTabNavigator() {\r\n  return (\r\n    <NavigationContainer>\r\n      <Tab.Navigator\r\n        screenOptions={({ route }) => ({\r\n          tabBarIcon: ({ focused, color, size }) => {\r\n            let iconName;\r\n            if (route.name === \"All\") {\r\n              iconName = focused\r\n                ? \"ios-add-circle-outline\"\r\n                : \"ios-add-circle-outline\";\r\n            } else if (route.name === \"Active\") {\r\n              iconName = focused ? \"ios-navigate\" : \"ios-navigate\";\r\n            } else if (route.name === \"Complete\") {\r\n              iconName = focused ? \"ios-done-all\" : \"ios-done-all\";\r\n            }\r\n            return <Ionicons name={iconName} size={size} color={color} />;\r\n          },\r\n        })}\r\n        tabBarOptions={{\r\n          activeTintColor: \"#358c63\",\r\n          inactiveTintColor: \"gray\",\r\n        }}\r\n      >\r\n        <Tab.Screen name=\"AllScreen\" component={AllStackScreen} />\r\n        <Tab.Screen name=\"CompleteScreen\" component={CompleteScreen} />\r\n        <Tab.Screen name=\"ActiveScreen\" component={ActiveScreen} />\r\n      </Tab.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}