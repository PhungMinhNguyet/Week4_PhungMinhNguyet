{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Program Files\\\\nodejs\\\\week4\\\\screens\\\\AllScreen.js\";\n\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { TODOS } from \"../utils/data\";\n\nvar TodoItem = function TodoItem(props) {\n  var statusStyle = {\n    backgroundColor: props.todo.status === \"Done\" ? \"blue\" : \"green\"\n  };\n  return React.createElement(TouchableOpacity, {\n    key: props.todo.body,\n    style: [styles.todoItem, statusStyle],\n    onPress: function onPress() {\n      return props.onToggleTodo(props.todo.id);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.todoText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, props.idx + 1, \" : \", props.todo.body));\n};\n\nvar AllScreen = function AllScreen() {\n  var _useState = useState(TODOS),\n      _useState2 = _slicedToArray(_useState, 2),\n      todoList = _useState2[0],\n      setTodoList = _useState2[1];\n\n  var onToggleTodo = function onToggleTodo(id) {\n    var todo = todoList.find(function (todo) {\n      return todo.id === id;\n    });\n    todo.status = todo.status === \"Done\" ? \"Active\" : \"Done\";\n    var foundIndex = todoList.findIndex(function (todo) {\n      return todo.id === id;\n    });\n    todoList[foundIndex] = todo;\n\n    var newTodoList = _toConsumableArray(todoList);\n\n    setTodoList(newTodoList);\n  };\n\n  var onLongPress = function onLongPress(todo) {\n    var prompt = \"\\\"\" + todo.body + \"\\\"\";\n    Alert.alert(\"Delete your todo?\", prompt, [{\n      text: \"Cancel\",\n      onPress: function onPress() {\n        return console.log(\"Cancel Pressed\");\n      },\n      style: \"cancel\"\n    }, {\n      text: \"OK\",\n      onPress: function onPress() {\n        return props.onDeleteTodo(todo.id);\n      }\n    }], {\n      cancelable: true\n    });\n  };\n\n  var onDeleteTodo = function onDeleteTodo(id) {\n    var newTodoList = todoList.filter(function (todo) {\n      return todo.id !== id;\n    });\n    setTodoList(newTodoList);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 5\n    }\n  }, TODOS.map(function (todo, idx) {\n    return React.createElement(TodoItem, {\n      key: todo.body,\n      todo: todo,\n      idx: idx,\n      onToggleTodo: onToggleTodo,\n      onDeleteTodo: onDeleteTodo,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    });\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    backgroundColor: \"#fff\",\n    justifyContent: \"center\"\n  },\n  todoItem: {\n    margin: 5,\n    padding: 10,\n    width: \"95%\",\n    minHeight: 20,\n    color: \"white\",\n    borderRadius: 5,\n    flexWrap: \"wrap\"\n  },\n  todoText: {\n    fontSize: 20,\n    color: \"white\",\n    fontWeight: \"bold\"\n  }\n});\nexport default AllScreen;","map":{"version":3,"sources":["C:/Program Files/nodejs/week4/screens/AllScreen.js"],"names":["React","useState","TODOS","TodoItem","props","statusStyle","backgroundColor","todo","status","body","styles","todoItem","onToggleTodo","id","todoText","idx","AllScreen","todoList","setTodoList","find","foundIndex","findIndex","newTodoList","onLongPress","prompt","Alert","alert","text","onPress","console","log","style","onDeleteTodo","cancelable","filter","container","map","StyleSheet","create","flex","alignItems","justifyContent","margin","padding","width","minHeight","color","borderRadius","flexWrap","fontSize","fontWeight"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Text, View, Alert, StyleSheet, TouchableOpacity } from \"react-native\";\r\nimport { TODOS } from \"../utils/data\";\r\n\r\nconst TodoItem = (props) => {\r\n  const statusStyle = {\r\n    backgroundColor: props.todo.status === \"Done\" ? \"blue\" : \"green\",\r\n  };\r\n  return (\r\n    <TouchableOpacity\r\n      key={props.todo.body}\r\n      style={[styles.todoItem, statusStyle]}\r\n      onPress={() => props.onToggleTodo(props.todo.id)}\r\n    >\r\n      <Text style={styles.todoText}>\r\n        {props.idx + 1} : {props.todo.body}\r\n      </Text>\r\n    </TouchableOpacity>\r\n  );\r\n};\r\n\r\nconst AllScreen = () => {\r\n  const [todoList, setTodoList] = useState(TODOS);\r\n\r\n  const onToggleTodo = (id) => {\r\n    const todo = todoList.find((todo) => todo.id === id);\r\n    todo.status = todo.status === \"Done\" ? \"Active\" : \"Done\";\r\n    const foundIndex = todoList.findIndex((todo) => todo.id === id);\r\n    todoList[foundIndex] = todo;\r\n    const newTodoList = [...todoList];\r\n    setTodoList(newTodoList);\r\n  };\r\n\r\n  const onLongPress = (todo) => {\r\n    const prompt = `\"${todo.body}\"`;\r\n    Alert.alert(\r\n      \"Delete your todo?\",\r\n      prompt,\r\n      [\r\n        {\r\n          text: \"Cancel\",\r\n          onPress: () => console.log(\"Cancel Pressed\"),\r\n          style: \"cancel\",\r\n        },\r\n        { text: \"OK\", onPress: () => props.onDeleteTodo(todo.id) },\r\n      ],\r\n      { cancelable: true }\r\n    );\r\n  };\r\n\r\n  const onDeleteTodo = (id) => {\r\n    const newTodoList = todoList.filter((todo) => todo.id !== id);\r\n    setTodoList(newTodoList);\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      {TODOS.map((todo, idx) => {\r\n        return (\r\n          <TodoItem\r\n            key={todo.body}\r\n            todo={todo}\r\n            idx={idx}\r\n            onToggleTodo={onToggleTodo}\r\n            onDeleteTodo={onDeleteTodo}\r\n          />\r\n        );\r\n      })}\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#fff\",\r\n    justifyContent: \"center\",\r\n  },\r\n  todoItem: {\r\n    margin: 5,\r\n    padding: 10,\r\n    width: \"95%\",\r\n    minHeight: 20,\r\n    color: \"white\",\r\n    borderRadius: 5,\r\n    flexWrap: \"wrap\",\r\n  },\r\n  todoText: {\r\n    fontSize: 20,\r\n    color: \"white\",\r\n    fontWeight: \"bold\",\r\n  },\r\n});\r\n\r\nexport default AllScreen;\r\n"]},"metadata":{},"sourceType":"module"}